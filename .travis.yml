#!/bin/bash
###############################################################################
# Copyright (c) 2015-2017, Lawrence Livermore National Security, LLC.
# 
# Produced at the Lawrence Livermore National Laboratory
# 
# LLNL-CODE-716457
# 
# All rights reserved.
# 
# This file is part of Alpine. 
# 
# For details, see: http://software.llnl.gov/ascent/.
# 
# Please also read ascent/LICENSE
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, 
#   this list of conditions and the disclaimer below.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the disclaimer (as noted below) in the
#   documentation and/or other materials provided with the distribution.
# 
# * Neither the name of the LLNS/LLNL nor the names of its contributors may
#   be used to endorse or promote products derived from this software without
#   specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
# 
###############################################################################
sudo: false

language: cpp
compiler:
  - gcc
env:
  global:
  - COMPILER_CC=gcc-5
  - COMPILER_CXX=g++-5
  - COMPILER_FC=gfortran-5
  matrix:
    # we want to test both static and shared, w/ and w/o docs and vtkm.
    - BUILD_SHARED_LIBS=ON
      ENABLE_VTKH=ON
      ENABLE_DOCS=ON
      ENABLE_ADIOS=OFF
    - BUILD_SHARED_LIBS=OFF
      ENABLE_VTKH=ON
      ENABLE_DOCS=OFF
      ENABLE_ADIOS=OFF
    - BUILD_SHARED_LIBS=ON
      ENABLE_VTKH=OFF
      ENABLE_DOCS=OFF
      ENABLE_ADIOS=OFF
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
       - binutils
       - gcc-5
       - g++-5
       - gfortran-5
       - openmpi-bin
       - libopenmpi-dev
       - libncurses-dev
       - libssl-dev
       - libopenblas-dev
       - zlib1g-dev
       - libgdbm-dev
       - libreadline-dev
       - libsqlite3-dev
       - libbz2-dev
cache:
  directories:
    - /home/travis/build/Alpine-DAV/uberenv_libs
install:
  # none
script:
  - which g++
  - g++ --version
  - export CC=${COMPILER_CC}
  - export CXX=${COMPILER_CXX}
  - export FC=${COMPILER_FC}
  - ${CC} --version
  - cd $TRAVIS_BUILD_DIR
  - echo $TRAVIS_BUILD_DIR
  # setup spack spec based on our travis options
  - export SPACK_SPEC="%gcc@5+mpi"
  - if [ $ENABLE_VTKH  = 'OFF' ]; then export SPACK_SPEC=${SPACK_SPEC}~vtkh; fi
  - if [ $ENABLE_DOCS  = 'OFF' ]; then export SPACK_SPEC=${SPACK_SPEC}~doc; fi
  - if [ $ENABLE_ADIOS = 'OFF' ]; then export SPACK_SPEC=${SPACK_SPEC}~adios; fi
  - echo $SPACK_SPEC
  # build deps using uberenv
  - cd ..
  - export CACHE_ROOT=`pwd`
  ########################################
  # uncomment remove stale everything
  ########################################
  # - if [ -d /home/travis/build/Alpine-DAV/uberenv_libs ]; then rm -rf /home/travis/build/Alpine-DAV/uberenv_libs; fi;
  ########################################
  # remove old cmake cache files
  - rm ${CACHE_ROOT}/uberenv_libs/*.cmake || true
  # clear the cache of conduit, vtkm and vtkh to rebuild critical dependencies
  - for f in ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/conduit*; do if [ -d $f ];   then export CLEAN_CONDUIT="TRUE"; fi; done;
  - for f in ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/vtkm*; do if [ -d $f ];      then export CLEAN_VTKM="TRUE"; fi; done;
  - for f in ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/py-mpi4py*; do if [ -d $f ]; then export CLEAN_MPI4PY="TRUE"; fi; done;
  - for f in ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/py-numpy*; do if [ -d $f ];  then export CLEAN_NUMPY="TRUE"; fi; done;
  - for f in ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/py-sphinx*; do if [ -d $f ]; then export CLEAN_SPHINX="TRUE"; fi; done;
  - if [ $CLEAN_CONDUIT  = 'TRUE' ]; then echo "y" | ${CACHE_ROOT}/uberenv_libs/spack/bin/spack uninstall --all --dependents --all conduit; fi;
  - if [ $CLEAN_VTKM  = 'TRUE' ]; then echo "y"    | ${CACHE_ROOT}/uberenv_libs/spack/bin/spack uninstall --all --dependents --all vtkm; fi;
  - if [ $CLEAN_MPI4PY = 'TRUE' ]; then echo "y"   | ${CACHE_ROOT}/uberenv_libs/spack/bin/spack uninstall --all --dependents --all py-mpi4py; fi;
  - if [ $CLEAN_NUMPY = 'TRUE' ]; then echo "y"    | ${CACHE_ROOT}/uberenv_libs/spack/bin/spack uninstall --all --dependents --all py-numpy; fi;
  - if [ $CLEAN_SPHINX = 'TRUE' ]; then echo "y"   | ${CACHE_ROOT}/uberenv_libs/spack/bin/spack uninstall --all --dependents --all py-sphinx; fi;
  - python ascent/scripts/uberenv/uberenv.py --pull --spec "${SPACK_SPEC}" --spack-config-dir=ascent/scripts/uberenv/spack_configs/travis/
  - cd $TRAVIS_BUILD_DIR
  # create out-of-source build dir
  - mkdir build-debug
  - cd    build-debug
  # cmake options
  # build type
  - CMAKE_OPTS="-DCMAKE_BUILD_TYPE=Debug"
  # shared or static libs
  - CMAKE_OPTS="${CMAKE_OPTS} -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}"
  # install path
  - CMAKE_OPTS="${CMAKE_OPTS} -DCMAKE_INSTALL_PREFIX=../install-debug"
  # make sure cmake is in our path
  - export CMAKE_BIN_DIR=`ls -d ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/cmake*/bin`
  - export PATH=${CMAKE_BIN_DIR}:$PATH
  - echo $PATH
  - which cmake
  - cmake --version
  - export HOST_CONFIG=`ls ${CACHE_ROOT}/uberenv_libs/*.cmake`
  - cmake ${CMAKE_OPTS} -C ${HOST_CONFIG} ../src
  # build, test, and install
  - make VERBOSE=1
  - env CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  # test our examples that demo using an installed ascent
  - export CONDUIT_DIR=`ls -d ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/conduit*`
  - export VTKM_DIR=`ls -d ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/vtkm*`
  - export VTKH_DIR=`ls -d ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/vtkh*`
  - export ASCENT_DIR=${TRAVIS_BUILD_DIR}/install-debug
  # `using with` examples
  - cd ${TRAVIS_BUILD_DIR}
  - if [ $ENABLE_VTKH = 'ON' ]; then ./scripts/test-using-with-examples.sh ; fi
  - cd ${TRAVIS_BUILD_DIR}
  - export PATH=$PATH:`ls -d ${CACHE_ROOT}/uberenv_libs/spack/opt/spack/*/*/mpich-*/bin/`
  - if [ $ENABLE_VTKH = 'ON' ]; then ./scripts/test-run-examples.sh ; fi
  
notifications:
  email:
    recipients:
      - cyrush@llnl.gov
      - larsen30@llnl.gov
    on_success: always
    on_failure: always
